syntax="proto3";
package pb;
option go_package = "../;server";  // 此处格式为<生成的文件存放位置;生成文件的包名>

//  protoc -I internal/service/pb --go_out=./internal/service/ --go_opt=paths=source_relative --go-grpc_out=./internal/service/ --go-grpc_opt=paths=source_relative internal/service/pb/*.proto
//  或者分开使用
//  protoc -I internal/service/pb/ --go_out=./ internal/service/pb/*.proto
//  protoc -I internal/service/pb/ --go-grpc_out=./  internal/service/pb/*.proto

message UserRequest{
  // @gotags:json:"username" form:"username" uri:"username"
  string Username = 1;  // 账号
  // @gotags:json:"password" form:"password" uri:"password"
  string Password = 2;  // 密码
}

message UserResponse{
  // @gotags:json:"status_code" form:"status_code" uri:"status_code"
  int64  StatusCode = 1;
  // @gotags:json:"status_msg" form:"status_msg" uri:"status_msg"
  string StatusMsg = 2;
  // @gotags:json:"user_id" form:"user_id" uri:"user_id"
  int64 UserId = 3;  // 用户id
}

message User {
  // @gotags:json:"id" form:"id" uri:"id"
  int64 Id = 1;
  // @gotags:json:"name" form:"name" uri:"name"
  string Name = 2;
  // @gotags:json:"douyin_num" form:"douyin_num" uri:"douyin_num"
  int64 DouyinNum = 3;  // 抖音号
  // @gotags:json:"total_favorite" form:"total_favorite" uri:"total_favorite"
  int64 TotalFavorite = 4;  // 用户获赞数量
  // @gotags:json:"favorite_count" form:"favorite_count" uri:"favorite_count"
  int64 FavoriteCount = 5;  //用户喜欢总数
  // @gotags:json:"article_count" form:"article_count" uri:"article_count"
  int64 ArticleCount = 6;  //用户作品数量
}

message UserInfoRequest {
  // @gotags:json:"user_ids" form:"user_ids" uri:"user_ids"
  repeated  int64 UserIds = 1;   // 传入一个userId切片
}

message UserInfoResponse {
  // @gotags:json:"status_code" form:"status_code" uri:"status_code"
  int64  StatusCode = 1;
  // @gotags:json:"status_msg" form:"status_msg" uri:"status_msg"
  string StatusMsg = 2;
  // @gotags:json:"users" form:"users" uri:"users"
  repeated User Users = 3;  // 用户信息
}


service UserService{
  rpc UserRegister(UserRequest) returns(UserResponse);
  rpc UserLogin(UserRequest) returns(UserResponse);
  rpc UserInfo(UserInfoRequest) returns(UserInfoResponse);
}